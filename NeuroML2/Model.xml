<Lems xmlns="http://www.neuroml.org/lems/0.7.4"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.4 ../../LEMS/Schemas/LEMS/LEMS_v0.7.4.xsd"
      description="A number of ComponentTypes for rate based/population models">

    <Include file="RateBased.xml"/>

    <Dimension name="per_charge" i="-1" t="-1"/>
    
    <Unit symbol="per_nC" dimension="per_charge" power="-9"/>

    <ComponentType  name="DemirtasEtAl2019Cell"
                     extends="baseRateUnit"
                     description="Work in progress...">

        
        <Parameter name="a" dimension="per_charge"/>
        <Parameter name="b" dimension="per_time"/>
        <Parameter name="d" dimension="time"/>

        <Attachments name="synapses" type="basePointCurrent"/>

        <Exposure name="f" dimension="none"/>
        <Exposure name="iSyn" dimension="current"/>

        <Constant name="NAMP_SCALE" dimension="current" value="1 nA"/>
        <Constant name="HZ_SCALE" dimension="per_time" value="1 Hz"/>

        <Dynamics>

            <StateVariable name="v" dimension="voltage" exposure="v"/>

            <DerivedVariable name="iSyn" dimension="current" exposure="iSyn" select="synapses[*]/i" reduce="add" />

            <DerivedVariable name="e" dimension="per_time" value="(a * iSyn) + b"/>

            <DerivedVariable name="f" dimension="per_time" exposure="f" value="e/(1 - exp(-1*d*e))"/>
            <DerivedVariable name="r" dimension="per_time" exposure="r" value="f"/>


            <!-- On condition is not need on the model but NeuroML requires its definition -->
            <OnCondition test="r .lt. 0">
                <EventOut port="spike"/>
            </OnCondition>

        </Dynamics>


    </ComponentType>


    <ComponentType  name="DemirtasEtAl2019Synapse"
                     extends="baseRateUnit"
                     description="Work in progress...">

        <Parameter name="tau" dimension="time"/>
        <Parameter name="SIG" dimension="none" description="Standard deviation of noise"/>
        <Parameter name="d" dimension="none" />
        <Parameter name="GAMMA" dimension="none"/>

        <Attachments name="synapses" type="basePointCurrent"/>

        <Exposure name="S" dimension="none"/>
        <Exposure name="phi" dimension="none"/>
        <Exposure name="iSyn" dimension="current"/>
        <Exposure name="xi" dimension="none"/>

        <Constant name="NAMP_SCALE" dimension="current" value="1 nA"/>
        <Constant name="HZ_SCALE" dimension="per_time" value="1 Hz"/>
        <Constant name="MVOLT_SCALE" dimension="voltage" value="1mV"/>

        <Dynamics>

            <StateVariable name="S" dimension="none" exposure="S"/>
            <StateVariable name="v" dimension="voltage" exposure="v"/>
            

            <StateVariable name="U" dimension="none"/>
            <StateVariable name="V" dimension="none"/>
            <StateVariable name="xi" dimension="none" exposure="xi"/>

            <DerivedVariable name="iSyn" dimension="current" exposure="iSyn" select="synapses[*]/i" reduce="add" />
            <DerivedVariable name="x" dimension="none" value="(iSyn)/NAMP_SCALE"/>

            <ConditionalDerivedVariable name="phi" dimension="none" exposure="phi">
                <Case condition="x .eq. 0" value="1"/>
                <Case condition="x .neq. 0" value="x / (1 - exp(-d*x))"/>
            </ConditionalDerivedVariable>

            <!-- Set v to r for now...
            <DerivedVariable name="v" dimension="voltage" exposure="v" value="0*MVOLT_SCALE"/>-->
            
            <DerivedVariable name="internalNoise" dimension="per_time"  value="SIG * xi * HZ_SCALE"/>
           
            <TimeDerivative variable="S" value="-1*S/tau + (1-S)*GAMMA*phi*HZ_SCALE + internalNoise "/>


            <OnStart>
                <StateAssignment variable="S" value="0"/>
            </OnStart>

            <!-- On condition is not need on the model but NeuroML requires its definition -->
            <OnCondition test="S .lt. 0">
                <EventOut port="spike"/>
            </OnCondition>

            <OnCondition test="t .geq. 0">
                <StateAssignment variable="U" value="random(1)"/>
                <StateAssignment variable="V" value="random(1)"/>
                <StateAssignment variable="xi" value="sqrt(-2*log(U))*cos(2*3.14159265359*V)"/>
            </OnCondition>

        </Dynamics>

    </ComponentType>



</Lems>
