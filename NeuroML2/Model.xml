<Lems xmlns="http://www.neuroml.org/lems/0.7.4"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.4 ../../LEMS/Schemas/LEMS/LEMS_v0.7.4.xsd"
      description="A number of ComponentTypes for rate based/population models">


    <ComponentType name="baseRateUnitDL"
                   extends="baseCellMembPotDL"
                   description="Base type of any cell/population which has a (dimensionless) rate _R.">
        <!-- Note: initially at least this will extend the baseCellMembPotDL (i.e. with V) for greater compatibility with
        other export simulators... -->
        <Exposure name="R" dimension="none"/>
    </ComponentType>


    <ComponentType name="baseRateUnit"
                   extends="baseCellMembPot"
                   description="Base type of any cell/population which has a (dimensional) rate _r.">
        <!-- Note: initially at least this will extend the baseCellMembPot (i.e. with v) for greater compatibility with
        other export simulators, particularly Neuron... -->
        <Exposure name="r" dimension="per_time"/>
    </ComponentType>


  
    <ComponentType name="baseGradedSynapseDL"
                   extends="baseSynapseDL"
                   description="Base type for dimensionless graded synapses">
    </ComponentType>


    <ComponentType name="silentRateSynapseDL"
                   extends="baseGradedSynapseDL"
                   description="Dummy synapse which emits no current. Used as presynaptic endpoint for analog synaptic connection.">

        <Property name="weight" dimension="none" defaultValue="1"/> <!-- Not used...-->

        <Exposure name="I" dimension="none"/>

        <InstanceRequirement name="peer" type="baseGradedSynapse"/>

        <Dynamics>
            <DerivedVariable name="I" exposure="I"  value="0"/>
        </Dynamics>

    </ComponentType>


    <ComponentType name="rateSynapseDL"
                   extends="baseGradedSynapseDL"
                   description="...">

        <Property name="weight" dimension="none" defaultValue="1"/>

        <Constant name="SEC" dimension="time" value="1s"/>
        <Constant name="PAMP" dimension="current" value="1nA"/>

        <Exposure name="I" dimension="none"/>

        <Requirement name="R" dimension="none"/>

        <InstanceRequirement name="peer" type="rateSynapseDL"/>

        <Dynamics>
            <DerivedVariable name="rpeer" dimension="none" select="peer/R"/>
            <DerivedVariable name="I" exposure="I"  value="weight * SEC * rpeer"/>
        </Dynamics>
    </ComponentType>


    <ComponentType name="baseRateSynapse"
                   extends="baseGradedSynapse"
                   description="Base type for rae based synapses">

        <Requirement name="r" dimension="per_time"/>

    </ComponentType>

    <!-- TODO: make it a baseRateSynapse... -->
    <ComponentType name="silentRateSynapse"
                   extends="baseGradedSynapse"
                   description="Dummy synapse which emits no current. Used as presynaptic endpoint for analog synaptic connection.">

        <Property name="weight" dimension="none" defaultValue="1"/> <!-- Not used...-->

        <Exposure name="i" dimension="current"/>

        <InstanceRequirement name="peer" type="baseGradedSynapse"/>

        <Dynamics>
            <DerivedVariable name="rpeer" dimension="per_time" select="peer/r"/>
            <DerivedVariable name="i" exposure="i"  value="0"/>
        </Dynamics>

    </ComponentType>


    <ComponentType name="rateSynapse"
                   extends="baseRateSynapse"
                   description="...">

        <Property name="weight" dimension="none" defaultValue="1"/>

        <Constant name="SEC" dimension="time" value="1s"/>
        <Constant name="NAMP_SCALE" dimension="current" value="1nA"/>

        <InstanceRequirement name="peer" type="rateSynapse"/>

        <Dynamics>
            <DerivedVariable name="rpeer" dimension="per_time" select="peer/r"/>
            <DerivedVariable name="i" exposure="i"  dimension="current" value="weight * SEC * NAMP_SCALE * rpeer"/>
        </Dynamics>
    </ComponentType>


    <ComponentType name="rateSynapsePicoAmp"
                   extends="baseRateSynapse"
                   description="...">

        <Property name="weight" dimension="none" defaultValue="1"/>

        <Constant name="SEC" dimension="time" value="1s"/>
        <Constant name="PAMP_SCALE" dimension="current" value="1pA"/>

        <InstanceRequirement name="peer" type="rateSynapse"/>

        <Dynamics>
            <DerivedVariable name="rpeer" dimension="per_time" select="peer/r"/>
            <DerivedVariable name="i" exposure="i"  value="weight * SEC * PAMP_SCALE * rpeer"/>
        </Dynamics>
    </ComponentType>


     <ComponentType  name="DemirtasEtAl2019CellExcitatory"
                    extends="baseRateUnit"
                    description="Work in progress...">

        <Parameter name="S0" dimension="none"/>
        <Parameter name="tau" dimension="time"/>
        <Parameter name="SIG" dimension="none" description="Standard deviation of noise"/>
        <Parameter name="d" dimension="none" />
        <Parameter name="GAMMA" dimension="none"/>

        <Attachments name="synapses" type="basePointCurrent"/>

        <Exposure name="phi" dimension="none"/>
        <Exposure name="iSyn" dimension="current"/>
        <Exposure name="xi" dimension="none"/>

        <Constant name="NAMP_SCALE" dimension="current" value="1 nA"/>
        <Constant name="HZ_SCALE" dimension="per_time" value="1 Hz"/>
        <Constant name="MVOLT_SCALE" dimension="voltage" value="1mV"/>

        <Dynamics>

            <StateVariable name="S" dimension="none" exposure="S"/>
            <StateVariable name="v" dimension="voltage" exposure="v"/>
            

            <StateVariable name="U" dimension="none"/>
            <StateVariable name="V" dimension="none"/>
            <StateVariable name="xi" dimension="none" exposure="xi"/>

            <DerivedVariable name="iSyn" dimension="current" exposure="iSyn" select="synapses[*]/i" reduce="add" />
            <DerivedVariable name="x" dimension="none" value="(iSyn)/NAMP_SCALE"/>

            <ConditionalDerivedVariable name="phi" dimension="none" exposure="phi">
            	<Case condition="x .eq. 0" value="1"/>
            	<Case condition="x .neq. 0" value="x / (1 - exp(-d*x))"/>
            </ConditionalDerivedVariable>

            <!-- Set v to r for now...
            <DerivedVariable name="v" dimension="voltage" exposure="v" value="0*MVOLT_SCALE"/>-->
            
           <DerivedVariable name="internalNoise" dimension="per_time"  value="SIG * xi * HZ_SCALE"/>
           
           <TimeDerivative variable="S" value="-1*S/tau + (1-S)*GAMMA*phi*HZ_SCALE + internalNoise "/>


            <OnStart>
                <StateAssignment variable="S" value="S0"/>
            </OnStart>

            <!-- On condition is not need on the model but NeuroML requires its definition -->
            <OnCondition test="S .lt. 0">
                <EventOut port="spike"/>
            </OnCondition>

            <OnCondition test="t .geq. 0">
                <StateAssignment variable="U" value="random(1)"/>
                <StateAssignment variable="V" value="random(1)"/>
                <StateAssignment variable="xi" value="sqrt(-2*log(U))*cos(2*3.14159265359*V)"/>
            </OnCondition>

        </Dynamics>

    </ComponentType>


     <ComponentType  name="DemirtasEtAl2019CellInhibitory"
                    extends="baseRateUnit"
                    description="Work in progress...">

        <Parameter name="tau" dimension="time"/>
        <Parameter name="S0" dimension="none"/>
        <Parameter name="SIG" dimension="none" description="Standard deviation of noise"/>
        <Parameter name="d" dimension="none" />

        <Attachments name="synapses" type="basePointCurrent"/>

        <Exposure name="phi" dimension="none"/>
        <Exposure name="iSyn" dimension="current"/>
        <Exposure name="xi" dimension="none"/>

        <Constant name="NAMP_SCALE" dimension="current" value="1 nA"/>
        <Constant name="HZ_SCALE" dimension="per_time" value="1 Hz"/>
        <Constant name="MVOLT_SCALE" dimension="voltage" value="1mV"/>

        <Dynamics>

            <StateVariable name="S" dimension="per_time" exposure="S"/>
            <StateVariable name="v" dimension="voltage" exposure="v"/>

            <StateVariable name="U" dimension="none"/>
            <StateVariable name="V" dimension="none"/>
            <StateVariable name="xi" dimension="none" exposure="xi"/>

            <DerivedVariable name="iSyn" dimension="current" exposure="iSyn" select="synapses[*]/i" reduce="add" />
            <DerivedVariable name="x" dimension="none" value="(iSyn)/NAMP_SCALE"/>

            <ConditionalDerivedVariable name="phi" dimension="none" exposure="phi">
            	<Case condition="x .eq. 0" value="1"/>
            	<Case condition="x .neq. 0" value="x / (1 - exp(-d*x))"/>
            </ConditionalDerivedVariable>

            <!-- Set v to r for now...
            <DerivedVariable name="v" dimension="voltage" exposure="v" value="0*MVOLT_SCALE"/>-->
            
           <DerivedVariable name="internalNoise" dimension="per_time"  value="SIG * xi * HZ_SCALE"/>
           
           <TimeDerivative variable="S" value="-1*S/tau + phi*HZ_SCALE + internalNoise "/>


            <OnStart>
                <StateAssignment variable="S" value="S0"/>
            </OnStart>

            <!-- On condition is not need on the model but NeuroML requires its definition -->
            <OnCondition test="S .lt. 0">
                <EventOut port="spike"/>
            </OnCondition>

            <OnCondition test="t .geq. 0">
                <StateAssignment variable="U" value="random(1)"/>
                <StateAssignment variable="V" value="random(1)"/>
                <StateAssignment variable="xi" value="sqrt(-2*log(U))*cos(2*3.14159265359*V)"/>
            </OnCondition>

        </Dynamics>

    </ComponentType>


</Lems>
